name: hi

# comment
on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
      target:
        required: true
        type: string
      multilib:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04
    environment: production
    # if: ${{ !contains('linux:rv64gcv-lp64d', format('{0}:{1}', inputs.mode, inputs.target)) }}
    steps:

      - uses: actions/checkout@v3

      - name: say hi
        run: |
          printf -- "---\ntitle: Test issue\n---\n" > issue.md
          printf "\`\`\`\nthis is { a test\n\`\`\`\n" >> issue.md
          
      - name: Create or update summary issue
        uses: JasonEtco/create-an-issue@v2
        id: create-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: issue.md
          update_existing: true

    outputs:
      build_success: ${{ steps.build-success.outputs.build_success }}

  test:
    timeout-minutes: 1
    runs-on: ubuntu-20.04
    environment: production
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: do something
        run: |
          echo 'ran even though build failed'

  test-condition-2:
    runs-on: ubuntu-20.04
    environment: production
    needs: [build, test]
    # if: ${{ failure() && needs.build.outputs.build_success == 'success' }}
    steps:
      - uses: actions/checkout@v3

      - name: do something
        run: |
          echo ${{ needs.build.outputs.build_success }}

  
